//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTest.DataAccessServ {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="DataAccess Web ServiceSoap", Namespace="http://webportalbridge.ptassoc.com/DataAccess/", ConfigurationName="DataAccessServ.DataAccessWebServiceSoap")]
    public interface DataAccessWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteSQLStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ExecuteSQLStatement(string securityPassword, string sqlStatement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteSQLStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ExecuteSQLStatementAsync(string securityPassword, string sqlStatement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteSelectSQLStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ExecuteSelectSQLStatement(string securityPassword, string sqlStatement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteSelectSQLStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ExecuteSelectSQLStatementAsync(string securityPassword, string sqlStatement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteStoredProcedure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ExecuteStoredProcedure(string securityPassword, string name, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteStoredProcedure", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ExecuteStoredProcedureAsync(string securityPassword, string name, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteDatasetStoredProcedure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ExecuteDatasetStoredProcedure(string securityPassword, string name, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteDatasetStoredProcedure", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExecuteDatasetStoredProcedureAsync(string securityPassword, string name, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteNonQueryStoredProcedure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ExecuteNonQueryStoredProcedure(string securityPassword, string name, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/ExecuteNonQueryStoredProcedure", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ExecuteNonQueryStoredProcedureAsync(string securityPassword, string name, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/CreateDynamicRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateDynamicRecord(string securityPassword, ServiceTest.DataAccessServ.Custom custom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/CreateDynamicRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateDynamicRecordAsync(string securityPassword, ServiceTest.DataAccessServ.Custom custom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/UpdateDynamicRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDynamicRecord(string securityPassword, ServiceTest.DataAccessServ.Custom custom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/UpdateDynamicRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDynamicRecordAsync(string securityPassword, ServiceTest.DataAccessServ.Custom custom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/DeleteDynamicRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteDynamicRecord(string securityPassword, ServiceTest.DataAccessServ.Custom custom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webportalbridge.ptassoc.com/DataAccess/DeleteDynamicRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteDynamicRecordAsync(string securityPassword, ServiceTest.DataAccessServ.Custom custom);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webportalbridge.ptassoc.com/DataAccess/")]
    public partial class Custom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xMLStringField;
        
        private string numberField;
        
        private string entityNameField;
        
        private string entityIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string XMLString {
            get {
                return this.xMLStringField;
            }
            set {
                this.xMLStringField = value;
                this.RaisePropertyChanged("XMLString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
                this.RaisePropertyChanged("Number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EntityName {
            get {
                return this.entityNameField;
            }
            set {
                this.entityNameField = value;
                this.RaisePropertyChanged("EntityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataAccessWebServiceSoapChannel : ServiceTest.DataAccessServ.DataAccessWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAccessWebServiceSoapClient : System.ServiceModel.ClientBase<ServiceTest.DataAccessServ.DataAccessWebServiceSoap>, ServiceTest.DataAccessServ.DataAccessWebServiceSoap {
        
        public DataAccessWebServiceSoapClient() {
        }
        
        public DataAccessWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAccessWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ExecuteSQLStatement(string securityPassword, string sqlStatement) {
            return base.Channel.ExecuteSQLStatement(securityPassword, sqlStatement);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteSQLStatementAsync(string securityPassword, string sqlStatement) {
            return base.Channel.ExecuteSQLStatementAsync(securityPassword, sqlStatement);
        }
        
        public string ExecuteSelectSQLStatement(string securityPassword, string sqlStatement) {
            return base.Channel.ExecuteSelectSQLStatement(securityPassword, sqlStatement);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteSelectSQLStatementAsync(string securityPassword, string sqlStatement) {
            return base.Channel.ExecuteSelectSQLStatementAsync(securityPassword, sqlStatement);
        }
        
        public string ExecuteStoredProcedure(string securityPassword, string name, string parameters) {
            return base.Channel.ExecuteStoredProcedure(securityPassword, name, parameters);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteStoredProcedureAsync(string securityPassword, string name, string parameters) {
            return base.Channel.ExecuteStoredProcedureAsync(securityPassword, name, parameters);
        }
        
        public System.Data.DataSet ExecuteDatasetStoredProcedure(string securityPassword, string name, string parameters) {
            return base.Channel.ExecuteDatasetStoredProcedure(securityPassword, name, parameters);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExecuteDatasetStoredProcedureAsync(string securityPassword, string name, string parameters) {
            return base.Channel.ExecuteDatasetStoredProcedureAsync(securityPassword, name, parameters);
        }
        
        public string ExecuteNonQueryStoredProcedure(string securityPassword, string name, string parameters) {
            return base.Channel.ExecuteNonQueryStoredProcedure(securityPassword, name, parameters);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteNonQueryStoredProcedureAsync(string securityPassword, string name, string parameters) {
            return base.Channel.ExecuteNonQueryStoredProcedureAsync(securityPassword, name, parameters);
        }
        
        public string CreateDynamicRecord(string securityPassword, ServiceTest.DataAccessServ.Custom custom) {
            return base.Channel.CreateDynamicRecord(securityPassword, custom);
        }
        
        public System.Threading.Tasks.Task<string> CreateDynamicRecordAsync(string securityPassword, ServiceTest.DataAccessServ.Custom custom) {
            return base.Channel.CreateDynamicRecordAsync(securityPassword, custom);
        }
        
        public string UpdateDynamicRecord(string securityPassword, ServiceTest.DataAccessServ.Custom custom) {
            return base.Channel.UpdateDynamicRecord(securityPassword, custom);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDynamicRecordAsync(string securityPassword, ServiceTest.DataAccessServ.Custom custom) {
            return base.Channel.UpdateDynamicRecordAsync(securityPassword, custom);
        }
        
        public string DeleteDynamicRecord(string securityPassword, ServiceTest.DataAccessServ.Custom custom) {
            return base.Channel.DeleteDynamicRecord(securityPassword, custom);
        }
        
        public System.Threading.Tasks.Task<string> DeleteDynamicRecordAsync(string securityPassword, ServiceTest.DataAccessServ.Custom custom) {
            return base.Channel.DeleteDynamicRecordAsync(securityPassword, custom);
        }
    }
}
